{"ast":null,"code":"import { __assign, __spreadArrays, __rest } from 'tslib';\nimport { hex, rgba, hsla, complex, color } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport sync, { cancelSync, getFrameData } from 'framesync';\n\nfunction spring(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0.0 : _b,\n      _c = _a.to,\n      to = _c === void 0 ? 0.0 : _c,\n      _d = _a.velocity,\n      velocity = _d === void 0 ? 0.0 : _d,\n      _e = _a.stiffness,\n      stiffness = _e === void 0 ? 100 : _e,\n      _f = _a.damping,\n      damping = _f === void 0 ? 10 : _f,\n      _g = _a.mass,\n      mass = _g === void 0 ? 1.0 : _g,\n      _h = _a.restSpeed,\n      restSpeed = _h === void 0 ? 2 : _h,\n      restDelta = _a.restDelta;\n  var state = {\n    done: false,\n    value: from\n  };\n  var resolveSpring = zero;\n  var resolveVelocity = zero;\n\n  function createSpring() {\n    var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    var initialDelta = to - from;\n    var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    var angularFreq = Math.sqrt(stiffness / mass) / 1000;\n    restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n\n    if (dampingRatio < 1) {\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * angularFreq * t);\n        var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n        return to - envelope * ((initialVelocity + dampingRatio * angularFreq * initialDelta) / expoDecay * Math.sin(expoDecay * t) + initialDelta * Math.cos(expoDecay * t));\n      };\n\n      resolveVelocity = function (t) {\n        var envelope = Math.exp(-dampingRatio * angularFreq * t);\n        var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n        return dampingRatio * angularFreq * envelope * (Math.sin(expoDecay * t) * (initialVelocity + dampingRatio * angularFreq * initialDelta) / expoDecay + initialDelta * Math.cos(expoDecay * t)) - envelope * (Math.cos(expoDecay * t) * (initialVelocity + dampingRatio * angularFreq * initialDelta) - expoDecay * initialDelta * Math.sin(expoDecay * t));\n      };\n    } else if (dampingRatio === 1) {\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-angularFreq * t);\n        return to - envelope * (initialDelta + (initialVelocity + angularFreq * initialDelta) * t);\n      };\n    } else {\n      var dampedAngularFreq_1 = angularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * angularFreq * t);\n        var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n        return to - envelope * ((initialVelocity + dampingRatio * angularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq_1 * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq_1;\n      };\n    }\n  }\n\n  createSpring();\n  return {\n    next: function (t) {\n      var current = resolveSpring(t);\n      var velocity = resolveVelocity(t) * 1000;\n      var isBelowVelocityThreshold = Math.abs(velocity) <= restSpeed;\n      var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n      state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n      state.value = state.done ? to : current;\n      return state;\n    },\n    flipTarget: function () {\n      var _a;\n\n      velocity = -velocity;\n      _a = [to, from], from = _a[0], to = _a[1];\n      createSpring();\n    }\n  };\n}\n\nspring.needsInterpolation = function (a, b) {\n  return typeof a === \"string\" || typeof b === \"string\";\n};\n\nvar zero = function (_t) {\n  return 0;\n};\n\nvar progress = function (from, to, value) {\n  var toFromDifference = to - from;\n  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nvar mix = function (from, to, progress) {\n  return -progress * from + progress * to + from;\n};\n\nvar mixLinearColor = function (from, to, v) {\n  var fromExpo = from * from;\n  var toExpo = to * to;\n  return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\n\nvar colorTypes = [hex, rgba, hsla];\n\nvar getColorType = function (v) {\n  return colorTypes.find(function (type) {\n    return type.test(v);\n  });\n};\n\nvar notAnimatable = function (color) {\n  return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\n\nvar mixColor = function (from, to) {\n  var fromColorType = getColorType(from);\n  var toColorType = getColorType(to);\n  invariant(!!fromColorType, notAnimatable(from));\n  invariant(!!toColorType, notAnimatable(to));\n  invariant(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\n  var fromColor = fromColorType.parse(from);\n  var toColor = toColorType.parse(to);\n\n  var blended = __assign({}, fromColor);\n\n  var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n  return function (v) {\n    for (var key in blended) {\n      if (key !== 'alpha') {\n        blended[key] = mixFunc(fromColor[key], toColor[key], v);\n      }\n    }\n\n    blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n    return fromColorType.transform(blended);\n  };\n};\n\nvar zeroPoint = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\nvar isNum = function (v) {\n  return typeof v === 'number';\n};\n\nvar combineFunctions = function (a, b) {\n  return function (v) {\n    return b(a(v));\n  };\n};\n\nvar pipe = function () {\n  var transformers = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    transformers[_i] = arguments[_i];\n  }\n\n  return transformers.reduce(combineFunctions);\n};\n\nfunction getMixer(origin, target) {\n  if (isNum(origin)) {\n    return function (v) {\n      return mix(origin, target, v);\n    };\n  } else if (color.test(origin)) {\n    return mixColor(origin, target);\n  } else {\n    return mixComplex(origin, target);\n  }\n}\n\nvar mixArray = function (from, to) {\n  var output = __spreadArrays(from);\n\n  var numValues = output.length;\n  var blendValue = from.map(function (fromThis, i) {\n    return getMixer(fromThis, to[i]);\n  });\n  return function (v) {\n    for (var i = 0; i < numValues; i++) {\n      output[i] = blendValue[i](v);\n    }\n\n    return output;\n  };\n};\n\nvar mixObject = function (origin, target) {\n  var output = __assign(__assign({}, origin), target);\n\n  var blendValue = {};\n\n  for (var key in output) {\n    if (origin[key] !== undefined && target[key] !== undefined) {\n      blendValue[key] = getMixer(origin[key], target[key]);\n    }\n  }\n\n  return function (v) {\n    for (var key in blendValue) {\n      output[key] = blendValue[key](v);\n    }\n\n    return output;\n  };\n};\n\nfunction analyse(value) {\n  var parsed = complex.parse(value);\n  var numValues = parsed.length;\n  var numNumbers = 0;\n  var numRGB = 0;\n  var numHSL = 0;\n\n  for (var i = 0; i < numValues; i++) {\n    if (numNumbers || typeof parsed[i] === 'number') {\n      numNumbers++;\n    } else {\n      if (parsed[i].hue !== undefined) {\n        numHSL++;\n      } else {\n        numRGB++;\n      }\n    }\n  }\n\n  return {\n    parsed: parsed,\n    numNumbers: numNumbers,\n    numRGB: numRGB,\n    numHSL: numHSL\n  };\n}\n\nvar mixComplex = function (origin, target) {\n  var template = complex.createTransformer(target);\n  var originStats = analyse(origin);\n  var targetStats = analyse(target);\n  invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n  return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nvar clamp = function (min, max, v) {\n  return Math.min(Math.max(v, min), max);\n};\n\nvar mixNumber = function (from, to) {\n  return function (p) {\n    return mix(from, to, p);\n  };\n};\n\nfunction detectMixerFactory(v) {\n  if (typeof v === 'number') {\n    return mixNumber;\n  } else if (typeof v === 'string') {\n    if (color.test(v)) {\n      return mixColor;\n    } else {\n      return mixComplex;\n    }\n  } else if (Array.isArray(v)) {\n    return mixArray;\n  } else if (typeof v === 'object') {\n    return mixObject;\n  }\n}\n\nfunction createMixers(output, ease, customMixer) {\n  var mixers = [];\n  var mixerFactory = customMixer || detectMixerFactory(output[0]);\n  var numMixers = output.length - 1;\n\n  for (var i = 0; i < numMixers; i++) {\n    var mixer = mixerFactory(output[i], output[i + 1]);\n\n    if (ease) {\n      var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n      mixer = pipe(easingFunction, mixer);\n    }\n\n    mixers.push(mixer);\n  }\n\n  return mixers;\n}\n\nfunction fastInterpolate(_a, _b) {\n  var from = _a[0],\n      to = _a[1];\n  var mixer = _b[0];\n  return function (v) {\n    return mixer(progress(from, to, v));\n  };\n}\n\nfunction slowInterpolate(input, mixers) {\n  var inputLength = input.length;\n  var lastInputIndex = inputLength - 1;\n  return function (v) {\n    var mixerIndex = 0;\n    var foundMixerIndex = false;\n\n    if (v <= input[0]) {\n      foundMixerIndex = true;\n    } else if (v >= input[lastInputIndex]) {\n      mixerIndex = lastInputIndex - 1;\n      foundMixerIndex = true;\n    }\n\n    if (!foundMixerIndex) {\n      var i = 1;\n\n      for (; i < inputLength; i++) {\n        if (input[i] > v || i === lastInputIndex) {\n          break;\n        }\n      }\n\n      mixerIndex = i - 1;\n    }\n\n    var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n    return mixers[mixerIndex](progressInRange);\n  };\n}\n\nfunction interpolate(input, output, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.clamp,\n      isClamp = _c === void 0 ? true : _c,\n      ease = _b.ease,\n      mixer = _b.mixer;\n\n  var inputLength = input.length;\n  invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n  invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n\n  if (input[0] > input[inputLength - 1]) {\n    input = [].concat(input);\n    output = [].concat(output);\n    input.reverse();\n    output.reverse();\n  }\n\n  var mixers = createMixers(output, ease, mixer);\n  var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n  return isClamp ? function (v) {\n    return interpolator(clamp(input[0], input[inputLength - 1], v));\n  } : interpolator;\n}\n\nvar reverseEasing = function (easing) {\n  return function (p) {\n    return 1 - easing(1 - p);\n  };\n};\n\nvar mirrorEasing = function (easing) {\n  return function (p) {\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n  };\n};\n\nvar createExpoIn = function (power) {\n  return function (p) {\n    return Math.pow(p, power);\n  };\n};\n\nvar createBackIn = function (power) {\n  return function (p) {\n    return p * p * ((power + 1) * p - power);\n  };\n};\n\nvar createAnticipate = function (power) {\n  var backEasing = createBackIn(power);\n  return function (p) {\n    return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n  };\n};\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\n\nvar linear = function (p) {\n  return p;\n};\n\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reverseEasing(easeIn);\nvar easeInOut = /*#__PURE__*/mirrorEasing(easeIn);\n\nvar circIn = function (p) {\n  return 1 - Math.sin(Math.acos(p));\n};\n\nvar circOut = /*#__PURE__*/reverseEasing(circIn);\nvar circInOut = /*#__PURE__*/mirrorEasing(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reverseEasing(backIn);\nvar backInOut = /*#__PURE__*/mirrorEasing(backIn);\nvar anticipate = /*#__PURE__*/createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\n\nvar bounceOut = function (p) {\n  if (p === 1 || p === 0) return p;\n  var p2 = p * p;\n  return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\n\nvar bounceIn = /*#__PURE__*/reverseEasing(bounceOut);\n\nvar bounceInOut = function (p) {\n  return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nfunction defaultEasing(values, easing) {\n  return values.map(function () {\n    return easing || easeInOut;\n  }).splice(0, values.length - 1);\n}\n\nfunction defaultOffset(values) {\n  var numValues = values.length;\n  return values.map(function (_value, i) {\n    return i !== 0 ? i / (numValues - 1) : 0;\n  });\n}\n\nfunction convertOffsetToTimes(offset, duration) {\n  return offset.map(function (o) {\n    return o * duration;\n  });\n}\n\nfunction keyframes(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0 : _b,\n      _c = _a.to,\n      to = _c === void 0 ? 1 : _c,\n      ease = _a.ease,\n      offset = _a.offset,\n      _d = _a.duration,\n      duration = _d === void 0 ? 300 : _d;\n  var state = {\n    done: false,\n    value: from\n  };\n  var values = Array.isArray(to) ? to : [from, to];\n  var times = convertOffsetToTimes(offset !== null && offset !== void 0 ? offset : defaultOffset(values), duration);\n\n  function createInterpolator() {\n    return interpolate(times, values, {\n      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n    });\n  }\n\n  var interpolator = createInterpolator();\n  return {\n    next: function (t) {\n      state.value = interpolator(t);\n      state.done = t >= duration;\n      return state;\n    },\n    flipTarget: function () {\n      values.reverse();\n      interpolator = createInterpolator();\n    }\n  };\n}\n\nfunction decay(_a) {\n  var _b = _a.velocity,\n      velocity = _b === void 0 ? 0 : _b,\n      _c = _a.from,\n      from = _c === void 0 ? 0 : _c,\n      _d = _a.power,\n      power = _d === void 0 ? 0.8 : _d,\n      _e = _a.timeConstant,\n      timeConstant = _e === void 0 ? 350 : _e,\n      _f = _a.restDelta,\n      restDelta = _f === void 0 ? 0.5 : _f,\n      modifyTarget = _a.modifyTarget;\n  var state = {\n    done: false,\n    value: from\n  };\n  var amplitude = power * velocity;\n  var ideal = from + amplitude;\n  var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n  if (target !== ideal) amplitude = target - from;\n  return {\n    next: function (t) {\n      var delta = -amplitude * Math.exp(-t / timeConstant);\n      state.done = !(delta > restDelta || delta < -restDelta);\n      state.value = state.done ? target : target + delta;\n      return state;\n    },\n    flipTarget: function () {}\n  };\n}\n\nvar types = {\n  keyframes: keyframes,\n  spring: spring,\n  decay: decay\n};\n\nfunction detectAnimationFromOptions(config) {\n  if (Array.isArray(config.to)) {\n    return keyframes;\n  } else if (types[config.type]) {\n    return types[config.type];\n  }\n\n  var keys = new Set(Object.keys(config));\n\n  if (keys.has(\"ease\") || keys.has(\"duration\")) {\n    return keyframes;\n  } else if (keys.has(\"stiffness\") || keys.has(\"mass\") || keys.has(\"damping\") || keys.has(\"restSpeed\") || keys.has(\"restDelta\")) {\n    return spring;\n  }\n\n  return keyframes;\n}\n\nfunction loopElapsed(elapsed, duration, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  return elapsed - duration - delay;\n}\n\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  if (isForwardPlayback === void 0) {\n    isForwardPlayback = true;\n  }\n\n  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\n\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nvar framesync = function (update) {\n  var passTimestamp = function (_a) {\n    var delta = _a.delta;\n    return update(delta);\n  };\n\n  return {\n    start: function () {\n      return sync.update(passTimestamp, true, true);\n    },\n    stop: function () {\n      return cancelSync.update(passTimestamp);\n    }\n  };\n};\n\nfunction animate(_a) {\n  var _b, _c;\n\n  var from = _a.from,\n      _d = _a.autoplay,\n      autoplay = _d === void 0 ? true : _d,\n      _e = _a.driver,\n      driver = _e === void 0 ? framesync : _e,\n      _f = _a.elapsed,\n      elapsed = _f === void 0 ? 0 : _f,\n      _g = _a.repeat,\n      repeatMax = _g === void 0 ? 0 : _g,\n      _h = _a.repeatType,\n      repeatType = _h === void 0 ? \"loop\" : _h,\n      _j = _a.repeatDelay,\n      repeatDelay = _j === void 0 ? 0 : _j,\n      onPlay = _a.onPlay,\n      onStop = _a.onStop,\n      onComplete = _a.onComplete,\n      onRepeat = _a.onRepeat,\n      onUpdate = _a.onUpdate,\n      options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n\n  var to = options.to;\n  var driverControls;\n  var repeatCount = 0;\n  var computedDuration = options.duration;\n  var latest;\n  var isComplete = false;\n  var isForwardPlayback = true;\n  var interpolateFromNumber;\n  var animator = detectAnimationFromOptions(options);\n\n  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n    interpolateFromNumber = interpolate([0, 100], [from, to], {\n      clamp: false\n    });\n    from = 0;\n    to = 100;\n  }\n\n  var animation = animator(__assign(__assign({}, options), {\n    from: from,\n    to: to\n  }));\n\n  function repeat() {\n    repeatCount++;\n\n    if (repeatType === \"reverse\") {\n      isForwardPlayback = repeatCount % 2 === 0;\n      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n    } else {\n      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n      if (repeatType === \"mirror\") animation.flipTarget();\n    }\n\n    isComplete = false;\n    onRepeat && onRepeat();\n  }\n\n  function complete() {\n    driverControls.stop();\n    onComplete && onComplete();\n  }\n\n  function update(delta) {\n    if (!isForwardPlayback) delta = -delta;\n    elapsed += delta;\n\n    if (!isComplete) {\n      var state = animation.next(Math.max(0, elapsed));\n      latest = state.value;\n      if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n      isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n    }\n\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n\n    if (isComplete) {\n      if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n\n      if (repeatCount < repeatMax) {\n        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n      } else {\n        complete();\n      }\n    }\n  }\n\n  function play() {\n    onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n    driverControls = driver(update);\n    driverControls.start();\n  }\n\n  autoplay && play();\n  return {\n    stop: function () {\n      onStop === null || onStop === void 0 ? void 0 : onStop();\n      driverControls.stop();\n    }\n  };\n}\n\nfunction velocityPerSecond(velocity, frameDuration) {\n  return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nfunction inertia(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0 : _b,\n      _c = _a.velocity,\n      velocity = _c === void 0 ? 0 : _c,\n      min = _a.min,\n      max = _a.max,\n      _d = _a.power,\n      power = _d === void 0 ? 0.8 : _d,\n      _e = _a.timeConstant,\n      timeConstant = _e === void 0 ? 750 : _e,\n      _f = _a.bounceStiffness,\n      bounceStiffness = _f === void 0 ? 500 : _f,\n      _g = _a.bounceDamping,\n      bounceDamping = _g === void 0 ? 10 : _g,\n      _h = _a.restDelta,\n      restDelta = _h === void 0 ? 1 : _h,\n      modifyTarget = _a.modifyTarget,\n      driver = _a.driver,\n      onUpdate = _a.onUpdate,\n      onComplete = _a.onComplete;\n  var currentAnimation;\n\n  function isOutOfBounds(v) {\n    return min !== undefined && v < min || max !== undefined && v > max;\n  }\n\n  function boundaryNearest(v) {\n    if (min === undefined) return max;\n    if (max === undefined) return min;\n    return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n  }\n\n  function startAnimation(options) {\n    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    currentAnimation = animate(__assign(__assign({}, options), {\n      driver: driver,\n      onUpdate: function (v) {\n        var _a;\n\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n      },\n      onComplete: onComplete\n    }));\n  }\n\n  function startSpring(options) {\n    startAnimation(__assign({\n      type: \"spring\",\n      stiffness: bounceStiffness,\n      damping: bounceDamping,\n      restDelta: restDelta\n    }, options));\n  }\n\n  if (isOutOfBounds(from)) {\n    startSpring({\n      from: from,\n      velocity: velocity,\n      to: boundaryNearest(from)\n    });\n  } else {\n    var target = power * velocity + from;\n    if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n    var boundary_1 = boundaryNearest(target);\n    var heading_1 = boundary_1 === min ? -1 : 1;\n    var prev_1;\n    var current_1;\n\n    var checkBoundary = function (v) {\n      prev_1 = current_1;\n      current_1 = v;\n      velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n\n      if (heading_1 === 1 && v > boundary_1 || heading_1 === -1 && v < boundary_1) {\n        startSpring({\n          from: v,\n          to: boundary_1,\n          velocity: velocity\n        });\n      }\n    };\n\n    startAnimation({\n      type: \"decay\",\n      from: from,\n      velocity: velocity,\n      timeConstant: timeConstant,\n      power: power,\n      restDelta: restDelta,\n      modifyTarget: modifyTarget,\n      onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n    });\n  }\n\n  return {\n    stop: function () {\n      return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    }\n  };\n}\n\nvar radiansToDegrees = function (radians) {\n  return radians * 180 / Math.PI;\n};\n\nvar angle = function (a, b) {\n  if (b === void 0) {\n    b = zeroPoint;\n  }\n\n  return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nvar applyOffset = function (from, to) {\n  var hasReceivedFrom = true;\n\n  if (to === undefined) {\n    to = from;\n    hasReceivedFrom = false;\n  }\n\n  return function (v) {\n    if (hasReceivedFrom) {\n      return v - from + to;\n    } else {\n      from = v;\n      hasReceivedFrom = true;\n      return to;\n    }\n  };\n};\n\nvar identity = function (v) {\n  return v;\n};\n\nvar createAttractor = function (alterDisplacement) {\n  if (alterDisplacement === void 0) {\n    alterDisplacement = identity;\n  }\n\n  return function (constant, origin, v) {\n    var displacement = origin - v;\n    var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n    return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n  };\n};\n\nvar attract = /*#__PURE__*/createAttractor();\nvar attractExpo = /*#__PURE__*/createAttractor(Math.sqrt);\n\nvar degreesToRadians = function (degrees) {\n  return degrees * Math.PI / 180;\n};\n\nvar isPoint = function (point) {\n  return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nvar isPoint3D = function (point) {\n  return isPoint(point) && point.hasOwnProperty('z');\n};\n\nvar distance1D = function (a, b) {\n  return Math.abs(a - b);\n};\n\nfunction distance(a, b) {\n  if (isNum(a) && isNum(b)) {\n    return distance1D(a, b);\n  } else if (isPoint(a) && isPoint(b)) {\n    var xDelta = distance1D(a.x, b.x);\n    var yDelta = distance1D(a.y, b.y);\n    var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n  }\n}\n\nvar pointFromVector = function (origin, angle, distance) {\n  angle = degreesToRadians(angle);\n  return {\n    x: distance * Math.cos(angle) + origin.x,\n    y: distance * Math.sin(angle) + origin.y\n  };\n};\n\nvar toDecimal = function (num, precision) {\n  if (precision === void 0) {\n    precision = 2;\n  }\n\n  precision = Math.pow(10, precision);\n  return Math.round(num * precision) / precision;\n};\n\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n  if (smoothing === void 0) {\n    smoothing = 0;\n  }\n\n  return toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration));\n};\n\nvar smooth = function (strength) {\n  if (strength === void 0) {\n    strength = 50;\n  }\n\n  var previousValue = 0;\n  var lastUpdated = 0;\n  return function (v) {\n    var currentFramestamp = getFrameData().timestamp;\n    var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n    var newValue = timeDelta ? smoothFrame(previousValue, v, timeDelta, strength) : previousValue;\n    lastUpdated = currentFramestamp;\n    previousValue = newValue;\n    return newValue;\n  };\n};\n\nvar snap = function (points) {\n  if (typeof points === 'number') {\n    return function (v) {\n      return Math.round(v / points) * points;\n    };\n  } else {\n    var i_1 = 0;\n    var numPoints_1 = points.length;\n    return function (v) {\n      var lastDistance = Math.abs(points[0] - v);\n\n      for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n        var point = points[i_1];\n        var distance = Math.abs(point - v);\n        if (distance === 0) return point;\n        if (distance > lastDistance) return points[i_1 - 1];\n        if (i_1 === numPoints_1 - 1) return point;\n        lastDistance = distance;\n      }\n    };\n  }\n};\n\nfunction velocityPerFrame(xps, frameDuration) {\n  return xps / (1000 / frameDuration);\n}\n\nvar wrap = function (min, max, v) {\n  var rangeSize = max - min;\n  return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\nvar a = function (a1, a2) {\n  return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\n\nvar b = function (a1, a2) {\n  return 3.0 * a2 - 6.0 * a1;\n};\n\nvar c = function (a1) {\n  return 3.0 * a1;\n};\n\nvar calcBezier = function (t, a1, a2) {\n  return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\n\nvar getSlope = function (t, a1, a2) {\n  return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\n\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\n\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n  var currentX;\n  var currentT;\n  var i = 0;\n\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);\n\n  return currentT;\n}\n\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\n\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n  for (var i = 0; i < newtonIterations; ++i) {\n    var currentSlope = getSlope(aGuessT, mX1, mX2);\n\n    if (currentSlope === 0.0) {\n      return aGuessT;\n    }\n\n    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n\n  return aGuessT;\n}\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n  if (mX1 === mY1 && mX2 === mY2) return linear;\n  var sampleValues = new Float32Array(kSplineTableSize);\n\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX(aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n\n    --currentSample;\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n\n    if (initialSlope >= newtonMinSlope) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function (t) {\n    return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n  };\n}\n\nvar steps = function (steps, direction) {\n  if (direction === void 0) {\n    direction = 'end';\n  }\n\n  return function (progress) {\n    progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n    var expanded = progress * steps;\n    var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n    return clamp(0, 1, rounded / steps);\n  };\n};\n\nexport { angle, animate, anticipate, applyOffset, attract, attractExpo, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, clamp, createAnticipate, createAttractor, createBackIn, createExpoIn, cubicBezier, decay, degreesToRadians, distance, easeIn, easeInOut, easeOut, inertia, interpolate, isPoint, isPoint3D, keyframes, linear, mirrorEasing, mix, mixColor, mixComplex, pipe, pointFromVector, progress, radiansToDegrees, reverseEasing, smooth, smoothFrame, snap, spring, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap };","map":{"version":3,"sources":["/home/fabian/Documents/tomiwolf-porfolio/node_modules/popmotion/dist/popmotion.es.js"],"names":["__assign","__spreadArrays","__rest","hex","rgba","hsla","complex","color","invariant","sync","cancelSync","getFrameData","spring","_a","_b","from","_c","to","_d","velocity","_e","stiffness","_f","damping","_g","mass","_h","restSpeed","restDelta","state","done","value","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","dampingRatio","Math","sqrt","angularFreq","abs","t","envelope","exp","expoDecay","sin","cos","dampedAngularFreq_1","freqForT","min","sinh","cosh","next","current","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","a","b","_t","progress","toFromDifference","mix","mixLinearColor","v","fromExpo","toExpo","max","colorTypes","getColorType","find","type","test","notAnimatable","mixColor","fromColorType","toColorType","transform","fromColor","parse","toColor","blended","mixFunc","key","alpha","zeroPoint","x","y","z","isNum","combineFunctions","pipe","transformers","_i","arguments","length","reduce","getMixer","origin","target","mixComplex","mixArray","output","numValues","blendValue","map","fromThis","i","mixObject","undefined","analyse","parsed","numNumbers","numRGB","numHSL","hue","template","createTransformer","originStats","targetStats","clamp","mixNumber","p","detectMixerFactory","Array","isArray","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","push","fastInterpolate","slowInterpolate","input","inputLength","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","interpolate","isClamp","concat","reverse","interpolator","reverseEasing","easing","mirrorEasing","createExpoIn","power","pow","createBackIn","createAnticipate","backEasing","DEFAULT_OVERSHOOT_STRENGTH","BOUNCE_FIRST_THRESHOLD","BOUNCE_SECOND_THRESHOLD","BOUNCE_THIRD_THRESHOLD","linear","easeIn","easeOut","easeInOut","circIn","acos","circOut","circInOut","backIn","backOut","backInOut","anticipate","ca","cb","cc","bounceOut","p2","bounceIn","bounceInOut","defaultEasing","values","splice","defaultOffset","_value","convertOffsetToTimes","offset","duration","o","keyframes","times","createInterpolator","decay","timeConstant","modifyTarget","amplitude","ideal","delta","types","detectAnimationFromOptions","config","keys","Set","Object","has","loopElapsed","elapsed","delay","reverseElapsed","isForwardPlayback","hasRepeatDelayElapsed","framesync","update","passTimestamp","start","stop","animate","autoplay","driver","repeat","repeatMax","repeatType","_j","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","options","driverControls","repeatCount","computedDuration","latest","isComplete","interpolateFromNumber","animator","call","animation","complete","play","velocityPerSecond","frameDuration","inertia","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary_1","heading_1","prev_1","current_1","checkBoundary","radiansToDegrees","radians","PI","angle","atan2","applyOffset","hasReceivedFrom","identity","createAttractor","alterDisplacement","constant","displacement","springModifiedDisplacement","attract","attractExpo","degreesToRadians","degrees","isPoint","point","hasOwnProperty","isPoint3D","distance1D","distance","xDelta","yDelta","zDelta","pointFromVector","toDecimal","num","precision","round","smoothFrame","prevValue","nextValue","smoothing","smooth","strength","previousValue","lastUpdated","currentFramestamp","timestamp","timeDelta","newValue","snap","points","i_1","numPoints_1","lastDistance","velocityPerFrame","xps","wrap","rangeSize","a1","a2","c","calcBezier","getSlope","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","newtonIterations","newtonMinSlope","newtonRaphsonIterate","aGuessT","currentSlope","kSplineTableSize","kSampleStepSize","cubicBezier","mY1","mY2","sampleValues","Float32Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","steps","direction","expanded","rounded","floor","ceil"],"mappings":"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","sourcesContent":["import { __assign, __spreadArrays, __rest } from 'tslib';\nimport { hex, rgba, hsla, complex, color } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport sync, { cancelSync, getFrameData } from 'framesync';\n\nfunction spring(_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0.0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 0.0 : _c,\n        _d = _a.velocity,\n        velocity = _d === void 0 ? 0.0 : _d,\n        _e = _a.stiffness,\n        stiffness = _e === void 0 ? 100 : _e,\n        _f = _a.damping,\n        damping = _f === void 0 ? 10 : _f,\n        _g = _a.mass,\n        mass = _g === void 0 ? 1.0 : _g,\n        _h = _a.restSpeed,\n        restSpeed = _h === void 0 ? 2 : _h,\n        restDelta = _a.restDelta;\n    var state = { done: false, value: from };\n    var resolveSpring = zero;\n    var resolveVelocity = zero;\n    function createSpring() {\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var initialDelta = to - from;\n        var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        var angularFreq = Math.sqrt(stiffness / mass) / 1000;\n        restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n        if (dampingRatio < 1) {\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * angularFreq * t);\n                var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n                return to - envelope * ((initialVelocity + dampingRatio * angularFreq * initialDelta) / expoDecay * Math.sin(expoDecay * t) + initialDelta * Math.cos(expoDecay * t));\n            };\n            resolveVelocity = function (t) {\n                var envelope = Math.exp(-dampingRatio * angularFreq * t);\n                var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n                return dampingRatio * angularFreq * envelope * (Math.sin(expoDecay * t) * (initialVelocity + dampingRatio * angularFreq * initialDelta) / expoDecay + initialDelta * Math.cos(expoDecay * t)) - envelope * (Math.cos(expoDecay * t) * (initialVelocity + dampingRatio * angularFreq * initialDelta) - expoDecay * initialDelta * Math.sin(expoDecay * t));\n            };\n        } else if (dampingRatio === 1) {\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-angularFreq * t);\n                return to - envelope * (initialDelta + (initialVelocity + angularFreq * initialDelta) * t);\n            };\n        } else {\n            var dampedAngularFreq_1 = angularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * angularFreq * t);\n                var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n                return to - envelope * ((initialVelocity + dampingRatio * angularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq_1 * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq_1;\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: function (t) {\n            var current = resolveSpring(t);\n            var velocity = resolveVelocity(t) * 1000;\n            var isBelowVelocityThreshold = Math.abs(velocity) <= restSpeed;\n            var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n            state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: function () {\n            var _a;\n            velocity = -velocity;\n            _a = [to, from], from = _a[0], to = _a[1];\n            createSpring();\n        }\n    };\n}\nspring.needsInterpolation = function (a, b) {\n    return typeof a === \"string\" || typeof b === \"string\";\n};\nvar zero = function (_t) {\n    return 0;\n};\n\nvar progress = function (from, to, value) {\n    var toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nvar mix = function (from, to, progress) {\n    return -progress * from + progress * to + from;\n};\n\nvar mixLinearColor = function (from, to, v) {\n    var fromExpo = from * from;\n    var toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nvar colorTypes = [hex, rgba, hsla];\nvar getColorType = function (v) {\n    return colorTypes.find(function (type) {\n        return type.test(v);\n    });\n};\nvar notAnimatable = function (color) {\n    return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\nvar mixColor = function (from, to) {\n    var fromColorType = getColorType(from);\n    var toColorType = getColorType(to);\n    invariant(!!fromColorType, notAnimatable(from));\n    invariant(!!toColorType, notAnimatable(to));\n    invariant(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\n    var fromColor = fromColorType.parse(from);\n    var toColor = toColorType.parse(to);\n    var blended = __assign({}, fromColor);\n    var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n    return function (v) {\n        for (var key in blended) {\n            if (key !== 'alpha') {\n                blended[key] = mixFunc(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n        return fromColorType.transform(blended);\n    };\n};\n\nvar zeroPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nvar isNum = function (v) {\n    return typeof v === 'number';\n};\n\nvar combineFunctions = function (a, b) {\n    return function (v) {\n        return b(a(v));\n    };\n};\nvar pipe = function () {\n    var transformers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        transformers[_i] = arguments[_i];\n    }\n    return transformers.reduce(combineFunctions);\n};\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return function (v) {\n            return mix(origin, target, v);\n        };\n    } else if (color.test(origin)) {\n        return mixColor(origin, target);\n    } else {\n        return mixComplex(origin, target);\n    }\n}\nvar mixArray = function (from, to) {\n    var output = __spreadArrays(from);\n    var numValues = output.length;\n    var blendValue = from.map(function (fromThis, i) {\n        return getMixer(fromThis, to[i]);\n    });\n    return function (v) {\n        for (var i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nvar mixObject = function (origin, target) {\n    var output = __assign(__assign({}, origin), target);\n    var blendValue = {};\n    for (var key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return function (v) {\n        for (var key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    var parsed = complex.parse(value);\n    var numValues = parsed.length;\n    var numNumbers = 0;\n    var numRGB = 0;\n    var numHSL = 0;\n    for (var i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === 'number') {\n            numNumbers++;\n        } else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            } else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };\n}\nvar mixComplex = function (origin, target) {\n    var template = complex.createTransformer(target);\n    var originStats = analyse(origin);\n    var targetStats = analyse(target);\n    invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nvar clamp = function (min, max, v) {\n    return Math.min(Math.max(v, min), max);\n};\n\nvar mixNumber = function (from, to) {\n    return function (p) {\n        return mix(from, to, p);\n    };\n};\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    } else if (typeof v === 'string') {\n        if (color.test(v)) {\n            return mixColor;\n        } else {\n            return mixComplex;\n        }\n    } else if (Array.isArray(v)) {\n        return mixArray;\n    } else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    var mixers = [];\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\n    var numMixers = output.length - 1;\n    for (var i = 0; i < numMixers; i++) {\n        var mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate(_a, _b) {\n    var from = _a[0],\n        to = _a[1];\n    var mixer = _b[0];\n    return function (v) {\n        return mixer(progress(from, to, v));\n    };\n}\nfunction slowInterpolate(input, mixers) {\n    var inputLength = input.length;\n    var lastInputIndex = inputLength - 1;\n    return function (v) {\n        var mixerIndex = 0;\n        var foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        } else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            var i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.clamp,\n        isClamp = _c === void 0 ? true : _c,\n        ease = _b.ease,\n        mixer = _b.mixer;\n    var inputLength = input.length;\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    var mixers = createMixers(output, ease, mixer);\n    var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n    return isClamp ? function (v) {\n        return interpolator(clamp(input[0], input[inputLength - 1], v));\n    } : interpolator;\n}\n\nvar reverseEasing = function (easing) {\n    return function (p) {\n        return 1 - easing(1 - p);\n    };\n};\nvar mirrorEasing = function (easing) {\n    return function (p) {\n        return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n    };\n};\nvar createExpoIn = function (power) {\n    return function (p) {\n        return Math.pow(p, power);\n    };\n};\nvar createBackIn = function (power) {\n    return function (p) {\n        return p * p * ((power + 1) * p - power);\n    };\n};\nvar createAnticipate = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar linear = function (p) {\n    return p;\n};\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reverseEasing(easeIn);\nvar easeInOut = /*#__PURE__*/mirrorEasing(easeIn);\nvar circIn = function (p) {\n    return 1 - Math.sin(Math.acos(p));\n};\nvar circOut = /*#__PURE__*/reverseEasing(circIn);\nvar circInOut = /*#__PURE__*/mirrorEasing(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reverseEasing(backIn);\nvar backInOut = /*#__PURE__*/mirrorEasing(backIn);\nvar anticipate = /*#__PURE__*/createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n    if (p === 1 || p === 0) return p;\n    var p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = /*#__PURE__*/reverseEasing(bounceOut);\nvar bounceInOut = function (p) {\n    return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nfunction defaultEasing(values, easing) {\n    return values.map(function () {\n        return easing || easeInOut;\n    }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    var numValues = values.length;\n    return values.map(function (_value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map(function (o) {\n        return o * duration;\n    });\n}\nfunction keyframes(_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 1 : _c,\n        ease = _a.ease,\n        offset = _a.offset,\n        _d = _a.duration,\n        duration = _d === void 0 ? 300 : _d;\n    var state = { done: false, value: from };\n    var values = Array.isArray(to) ? to : [from, to];\n    var times = convertOffsetToTimes(offset !== null && offset !== void 0 ? offset : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n        });\n    }\n    var interpolator = createInterpolator();\n    return {\n        next: function (t) {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: function () {\n            values.reverse();\n            interpolator = createInterpolator();\n        }\n    };\n}\n\nfunction decay(_a) {\n    var _b = _a.velocity,\n        velocity = _b === void 0 ? 0 : _b,\n        _c = _a.from,\n        from = _c === void 0 ? 0 : _c,\n        _d = _a.power,\n        power = _d === void 0 ? 0.8 : _d,\n        _e = _a.timeConstant,\n        timeConstant = _e === void 0 ? 350 : _e,\n        _f = _a.restDelta,\n        restDelta = _f === void 0 ? 0.5 : _f,\n        modifyTarget = _a.modifyTarget;\n    var state = { done: false, value: from };\n    var amplitude = power * velocity;\n    var ideal = from + amplitude;\n    var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    if (target !== ideal) amplitude = target - from;\n    return {\n        next: function (t) {\n            var delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: function () {}\n    };\n}\n\nvar types = { keyframes: keyframes, spring: spring, decay: decay };\nfunction detectAnimationFromOptions(config) {\n    if (Array.isArray(config.to)) {\n        return keyframes;\n    } else if (types[config.type]) {\n        return types[config.type];\n    }\n    var keys = new Set(Object.keys(config));\n    if (keys.has(\"ease\") || keys.has(\"duration\")) {\n        return keyframes;\n    } else if (keys.has(\"stiffness\") || keys.has(\"mass\") || keys.has(\"damping\") || keys.has(\"restSpeed\") || keys.has(\"restDelta\")) {\n        return spring;\n    }\n    return keyframes;\n}\n\nfunction loopElapsed(elapsed, duration, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    if (isForwardPlayback === void 0) {\n        isForwardPlayback = true;\n    }\n    return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nvar framesync = function (update) {\n    var passTimestamp = function (_a) {\n        var delta = _a.delta;\n        return update(delta);\n    };\n    return {\n        start: function () {\n            return sync.update(passTimestamp, true, true);\n        },\n        stop: function () {\n            return cancelSync.update(passTimestamp);\n        }\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var from = _a.from,\n        _d = _a.autoplay,\n        autoplay = _d === void 0 ? true : _d,\n        _e = _a.driver,\n        driver = _e === void 0 ? framesync : _e,\n        _f = _a.elapsed,\n        elapsed = _f === void 0 ? 0 : _f,\n        _g = _a.repeat,\n        repeatMax = _g === void 0 ? 0 : _g,\n        _h = _a.repeatType,\n        repeatType = _h === void 0 ? \"loop\" : _h,\n        _j = _a.repeatDelay,\n        repeatDelay = _j === void 0 ? 0 : _j,\n        onPlay = _a.onPlay,\n        onStop = _a.onStop,\n        onComplete = _a.onComplete,\n        onRepeat = _a.onRepeat,\n        onUpdate = _a.onUpdate,\n        options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    var to = options.to;\n    var driverControls;\n    var repeatCount = 0;\n    var computedDuration = options.duration;\n    var latest;\n    var isComplete = false;\n    var isForwardPlayback = true;\n    var interpolateFromNumber;\n    var animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false\n        });\n        from = 0;\n        to = 100;\n    }\n    var animation = animator(__assign(__assign({}, options), { from: from, to: to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        } else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\") animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback) delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            var state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            } else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: function () {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        }\n    };\n}\n\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nfunction inertia(_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.velocity,\n        velocity = _c === void 0 ? 0 : _c,\n        min = _a.min,\n        max = _a.max,\n        _d = _a.power,\n        power = _d === void 0 ? 0.8 : _d,\n        _e = _a.timeConstant,\n        timeConstant = _e === void 0 ? 750 : _e,\n        _f = _a.bounceStiffness,\n        bounceStiffness = _f === void 0 ? 500 : _f,\n        _g = _a.bounceDamping,\n        bounceDamping = _g === void 0 ? 10 : _g,\n        _h = _a.restDelta,\n        restDelta = _h === void 0 ? 1 : _h,\n        modifyTarget = _a.modifyTarget,\n        driver = _a.driver,\n        onUpdate = _a.onUpdate,\n        onComplete = _a.onComplete;\n    var currentAnimation;\n    function isOutOfBounds(v) {\n        return min !== undefined && v < min || max !== undefined && v > max;\n    }\n    function boundaryNearest(v) {\n        if (min === undefined) return max;\n        if (max === undefined) return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(__assign(__assign({}, options), { driver: driver, onUpdate: function (v) {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete: onComplete }));\n    }\n    function startSpring(options) {\n        startAnimation(__assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from: from, velocity: velocity, to: boundaryNearest(from) });\n    } else {\n        var target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n        var boundary_1 = boundaryNearest(target);\n        var heading_1 = boundary_1 === min ? -1 : 1;\n        var prev_1;\n        var current_1;\n        var checkBoundary = function (v) {\n            prev_1 = current_1;\n            current_1 = v;\n            velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n            if (heading_1 === 1 && v > boundary_1 || heading_1 === -1 && v < boundary_1) {\n                startSpring({ from: v, to: boundary_1, velocity: velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from: from,\n            velocity: velocity,\n            timeConstant: timeConstant,\n            power: power,\n            restDelta: restDelta,\n            modifyTarget: modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n        });\n    }\n    return {\n        stop: function () {\n            return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        }\n    };\n}\n\nvar radiansToDegrees = function (radians) {\n    return radians * 180 / Math.PI;\n};\n\nvar angle = function (a, b) {\n    if (b === void 0) {\n        b = zeroPoint;\n    }\n    return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nvar applyOffset = function (from, to) {\n    var hasReceivedFrom = true;\n    if (to === undefined) {\n        to = from;\n        hasReceivedFrom = false;\n    }\n    return function (v) {\n        if (hasReceivedFrom) {\n            return v - from + to;\n        } else {\n            from = v;\n            hasReceivedFrom = true;\n            return to;\n        }\n    };\n};\n\nvar identity = function (v) {\n    return v;\n};\nvar createAttractor = function (alterDisplacement) {\n    if (alterDisplacement === void 0) {\n        alterDisplacement = identity;\n    }\n    return function (constant, origin, v) {\n        var displacement = origin - v;\n        var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n        return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n    };\n};\nvar attract = /*#__PURE__*/createAttractor();\nvar attractExpo = /*#__PURE__*/createAttractor(Math.sqrt);\n\nvar degreesToRadians = function (degrees) {\n    return degrees * Math.PI / 180;\n};\n\nvar isPoint = function (point) {\n    return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nvar isPoint3D = function (point) {\n    return isPoint(point) && point.hasOwnProperty('z');\n};\n\nvar distance1D = function (a, b) {\n    return Math.abs(a - b);\n};\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    } else if (isPoint(a) && isPoint(b)) {\n        var xDelta = distance1D(a.x, b.x);\n        var yDelta = distance1D(a.y, b.y);\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nvar pointFromVector = function (origin, angle, distance) {\n    angle = degreesToRadians(angle);\n    return {\n        x: distance * Math.cos(angle) + origin.x,\n        y: distance * Math.sin(angle) + origin.y\n    };\n};\n\nvar toDecimal = function (num, precision) {\n    if (precision === void 0) {\n        precision = 2;\n    }\n    precision = Math.pow(10, precision);\n    return Math.round(num * precision) / precision;\n};\n\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n    if (smoothing === void 0) {\n        smoothing = 0;\n    }\n    return toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration));\n};\n\nvar smooth = function (strength) {\n    if (strength === void 0) {\n        strength = 50;\n    }\n    var previousValue = 0;\n    var lastUpdated = 0;\n    return function (v) {\n        var currentFramestamp = getFrameData().timestamp;\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n        var newValue = timeDelta ? smoothFrame(previousValue, v, timeDelta, strength) : previousValue;\n        lastUpdated = currentFramestamp;\n        previousValue = newValue;\n        return newValue;\n    };\n};\n\nvar snap = function (points) {\n    if (typeof points === 'number') {\n        return function (v) {\n            return Math.round(v / points) * points;\n        };\n    } else {\n        var i_1 = 0;\n        var numPoints_1 = points.length;\n        return function (v) {\n            var lastDistance = Math.abs(points[0] - v);\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n                var point = points[i_1];\n                var distance = Math.abs(point - v);\n                if (distance === 0) return point;\n                if (distance > lastDistance) return points[i_1 - 1];\n                if (i_1 === numPoints_1 - 1) return point;\n                lastDistance = distance;\n            }\n        };\n    }\n};\n\nfunction velocityPerFrame(xps, frameDuration) {\n    return xps / (1000 / frameDuration);\n}\n\nvar wrap = function (min, max, v) {\n    var rangeSize = max - min;\n    return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\nvar a = function (a1, a2) {\n    return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\nvar b = function (a1, a2) {\n    return 3.0 * a2 - 6.0 * a1;\n};\nvar c = function (a1) {\n    return 3.0 * a1;\n};\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX;\n    var currentT;\n    var i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        } else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);\n    return currentT;\n}\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < newtonIterations; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2) return linear;\n    var sampleValues = new Float32Array(kSplineTableSize);\n    for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        } else if (initialSlope === 0.0) {\n            return guessForT;\n        } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return function (t) {\n        return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n    };\n}\n\nvar steps = function (steps, direction) {\n    if (direction === void 0) {\n        direction = 'end';\n    }\n    return function (progress) {\n        progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n        var expanded = progress * steps;\n        var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n        return clamp(0, 1, rounded / steps);\n    };\n};\n\nexport { angle, animate, anticipate, applyOffset, attract, attractExpo, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, clamp, createAnticipate, createAttractor, createBackIn, createExpoIn, cubicBezier, decay, degreesToRadians, distance, easeIn, easeInOut, easeOut, inertia, interpolate, isPoint, isPoint3D, keyframes, linear, mirrorEasing, mix, mixColor, mixComplex, pipe, pointFromVector, progress, radiansToDegrees, reverseEasing, smooth, smoothFrame, snap, spring, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap };\n"]},"metadata":{},"sourceType":"module"}